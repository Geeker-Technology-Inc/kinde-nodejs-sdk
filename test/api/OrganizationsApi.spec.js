/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KindeManagementApi);
  }
}(this, function(expect, KindeManagementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KindeManagementApi.OrganizationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationsApi', function() {
    describe('addOrganizationUsers', function() {
      it('should call addOrganizationUsers successfully', function(done) {
        //uncomment below and update the code to test addOrganizationUsers
        //instance.addOrganizationUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrganization', function() {
      it('should call createOrganization successfully', function(done) {
        //uncomment below and update the code to test createOrganization
        //instance.createOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrganizationUserRole', function() {
      it('should call createOrganizationUserRole successfully', function(done) {
        //uncomment below and update the code to test createOrganizationUserRole
        //instance.createOrganizationUserRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationFeatureFlagOverride', function() {
      it('should call deleteOrganizationFeatureFlagOverride successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationFeatureFlagOverride
        //instance.deleteOrganizationFeatureFlagOverride(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationFeatureFlagOverrides', function() {
      it('should call deleteOrganizationFeatureFlagOverrides successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationFeatureFlagOverrides
        //instance.deleteOrganizationFeatureFlagOverrides(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationUserRole', function() {
      it('should call deleteOrganizationUserRole successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationUserRole
        //instance.deleteOrganizationUserRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganization', function() {
      it('should call getOrganization successfully', function(done) {
        //uncomment below and update the code to test getOrganization
        //instance.getOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationUserRoles', function() {
      it('should call getOrganizationUserRoles successfully', function(done) {
        //uncomment below and update the code to test getOrganizationUserRoles
        //instance.getOrganizationUserRoles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationUsers', function() {
      it('should call getOrganizationUsers successfully', function(done) {
        //uncomment below and update the code to test getOrganizationUsers
        //instance.getOrganizationUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizations', function() {
      it('should call getOrganizations successfully', function(done) {
        //uncomment below and update the code to test getOrganizations
        //instance.getOrganizations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeOrganizationUser', function() {
      it('should call removeOrganizationUser successfully', function(done) {
        //uncomment below and update the code to test removeOrganizationUser
        //instance.removeOrganizationUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganization', function() {
      it('should call updateOrganization successfully', function(done) {
        //uncomment below and update the code to test updateOrganization
        //instance.updateOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationFeatureFlagOverride', function() {
      it('should call updateOrganizationFeatureFlagOverride successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationFeatureFlagOverride
        //instance.updateOrganizationFeatureFlagOverride(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationUsers', function() {
      it('should call updateOrganizationUsers successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationUsers
        //instance.updateOrganizationUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
