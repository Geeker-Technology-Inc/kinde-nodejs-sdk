/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateOrganizationRequest model module.
 * @module model/CreateOrganizationRequest
 * @version 1
 */
class CreateOrganizationRequest {
    /**
     * Constructs a new <code>CreateOrganizationRequest</code>.
     * @alias module:model/CreateOrganizationRequest
     */
    constructor() { 
        
        CreateOrganizationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateOrganizationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateOrganizationRequest} obj Optional instance to populate.
     * @return {module:model/CreateOrganizationRequest} The populated <code>CreateOrganizationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateOrganizationRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('feature_flags')) {
                obj['feature_flags'] = ApiClient.convertToType(data['feature_flags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateOrganizationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateOrganizationRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The organization's name.
 * @member {String} name
 */
CreateOrganizationRequest.prototype['name'] = undefined;

/**
 * The organization's feature flag settings.
 * @member {Object.<String, module:model/CreateOrganizationRequest.InnerEnum>} feature_flags
 */
CreateOrganizationRequest.prototype['feature_flags'] = undefined;





/**
 * Allowed values for the <code>inner</code> property.
 * @enum {String}
 * @readonly
 */
CreateOrganizationRequest['InnerEnum'] = {

    /**
     * value: "str"
     * @const
     */
    "str": "str",

    /**
     * value: "int"
     * @const
     */
    "int": "int",

    /**
     * value: "bool"
     * @const
     */
    "bool": "bool"
};



export default CreateOrganizationRequest;

