/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The User model module.
 * @module model/User
 * @version 1
 */
class User {
    /**
     * Constructs a new <code>User</code>.
     * @alias module:model/User
     */
    constructor() { 
        
        User.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/User} obj Optional instance to populate.
     * @return {module:model/User} The populated <code>User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new User();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('provided_id')) {
                obj['provided_id'] = ApiClient.convertToType(data['provided_id'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('full_name')) {
                obj['full_name'] = ApiClient.convertToType(data['full_name'], 'String');
            }
            if (data.hasOwnProperty('is_suspended')) {
                obj['is_suspended'] = ApiClient.convertToType(data['is_suspended'], 'Boolean');
            }
            if (data.hasOwnProperty('picture')) {
                obj['picture'] = ApiClient.convertToType(data['picture'], 'String');
            }
            if (data.hasOwnProperty('total_sign_ins')) {
                obj['total_sign_ins'] = ApiClient.convertToType(data['total_sign_ins'], 'Number');
            }
            if (data.hasOwnProperty('failed_sign_ins')) {
                obj['failed_sign_ins'] = ApiClient.convertToType(data['failed_sign_ins'], 'Number');
            }
            if (data.hasOwnProperty('last_signed_in')) {
                obj['last_signed_in'] = ApiClient.convertToType(data['last_signed_in'], 'String');
            }
            if (data.hasOwnProperty('created_on')) {
                obj['created_on'] = ApiClient.convertToType(data['created_on'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>User</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>User</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['provided_id'] && !(typeof data['provided_id'] === 'string' || data['provided_id'] instanceof String)) {
            throw new Error("Expected the field `provided_id` to be a primitive type in the JSON string but got " + data['provided_id']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['full_name'] && !(typeof data['full_name'] === 'string' || data['full_name'] instanceof String)) {
            throw new Error("Expected the field `full_name` to be a primitive type in the JSON string but got " + data['full_name']);
        }
        // ensure the json data is a string
        if (data['picture'] && !(typeof data['picture'] === 'string' || data['picture'] instanceof String)) {
            throw new Error("Expected the field `picture` to be a primitive type in the JSON string but got " + data['picture']);
        }
        // ensure the json data is a string
        if (data['last_signed_in'] && !(typeof data['last_signed_in'] === 'string' || data['last_signed_in'] instanceof String)) {
            throw new Error("Expected the field `last_signed_in` to be a primitive type in the JSON string but got " + data['last_signed_in']);
        }
        // ensure the json data is a string
        if (data['created_on'] && !(typeof data['created_on'] === 'string' || data['created_on'] instanceof String)) {
            throw new Error("Expected the field `created_on` to be a primitive type in the JSON string but got " + data['created_on']);
        }

        return true;
    }


}



/**
 * Unique id of the user in Kinde.
 * @member {String} id
 */
User.prototype['id'] = undefined;

/**
 * External id for user.
 * @member {String} provided_id
 */
User.prototype['provided_id'] = undefined;

/**
 * Default email address of the user in Kinde.
 * @member {String} email
 */
User.prototype['email'] = undefined;

/**
 * User's last name.
 * @member {String} last_name
 */
User.prototype['last_name'] = undefined;

/**
 * User's first name.
 * @member {String} first_name
 */
User.prototype['first_name'] = undefined;

/**
 * User's full name.
 * @member {String} full_name
 */
User.prototype['full_name'] = undefined;

/**
 * Whether the user is currently suspended or not.
 * @member {Boolean} is_suspended
 */
User.prototype['is_suspended'] = undefined;

/**
 * User's profile picture URL.
 * @member {String} picture
 */
User.prototype['picture'] = undefined;

/**
 * Total number of user sign ins.
 * @member {Number} total_sign_ins
 */
User.prototype['total_sign_ins'] = undefined;

/**
 * Number of consecutive failed user sign ins.
 * @member {Number} failed_sign_ins
 */
User.prototype['failed_sign_ins'] = undefined;

/**
 * Last sign in date in ISO 8601 format.
 * @member {String} last_signed_in
 */
User.prototype['last_signed_in'] = undefined;

/**
 * Date of user creation in ISO 8601 format.
 * @member {String} created_on
 */
User.prototype['created_on'] = undefined;






export default User;

