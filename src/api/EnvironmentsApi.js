/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import SuccessResponse from '../model/SuccessResponse';

/**
* Environments service.
* @module api/EnvironmentsApi
* @version 1
*/
export default class EnvironmentsApi {

    /**
    * Constructs a new EnvironmentsApi. 
    * @alias module:api/EnvironmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteEnvironementFeatureFlagOverride operation.
     * @callback module:api/EnvironmentsApi~deleteEnvironementFeatureFlagOverrideCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete environment feature flag override
     * Delete environment feature flag override.
     * @param {String} featureFlagKey The identifier for the feature flag.
     * @param {module:api/EnvironmentsApi~deleteEnvironementFeatureFlagOverrideCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponse}
     */
    deleteEnvironementFeatureFlagOverride(featureFlagKey, callback) {
      let postBody = null;
      // verify the required parameter 'featureFlagKey' is set
      if (featureFlagKey === undefined || featureFlagKey === null) {
        throw new Error("Missing the required parameter 'featureFlagKey' when calling deleteEnvironementFeatureFlagOverride");
      }

      let pathParams = {
        'feature_flag_key': featureFlagKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['kindeBearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json; charset=utf-8'];
      let returnType = SuccessResponse;
      return this.apiClient.callApi(
        '/api/v1/environment/feature_flags/{feature_flag_key}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteEnvironementFeatureFlagOverrides operation.
     * @callback module:api/EnvironmentsApi~deleteEnvironementFeatureFlagOverridesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete all environment feature flag overrides
     * Delete all environment feature flag overrides.
     * @param {module:api/EnvironmentsApi~deleteEnvironementFeatureFlagOverridesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponse}
     */
    deleteEnvironementFeatureFlagOverrides(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['kindeBearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json; charset=utf-8'];
      let returnType = SuccessResponse;
      return this.apiClient.callApi(
        '/api/v1/environment/feature_flags/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateEnvironementFeatureFlagOverride operation.
     * @callback module:api/EnvironmentsApi~updateEnvironementFeatureFlagOverrideCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update environment feature flag override
     * Update environment feature flag override.
     * @param {String} featureFlagKey The identifier for the feature flag.
     * @param {String} value The override value for the feature flag.
     * @param {module:api/EnvironmentsApi~updateEnvironementFeatureFlagOverrideCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponse}
     */
    updateEnvironementFeatureFlagOverride(featureFlagKey, value, callback) {
      let postBody = null;
      // verify the required parameter 'featureFlagKey' is set
      if (featureFlagKey === undefined || featureFlagKey === null) {
        throw new Error("Missing the required parameter 'featureFlagKey' when calling updateEnvironementFeatureFlagOverride");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling updateEnvironementFeatureFlagOverride");
      }

      let pathParams = {
        'feature_flag_key': featureFlagKey
      };
      let queryParams = {
        'value': value
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['kindeBearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json; charset=utf-8'];
      let returnType = SuccessResponse;
      return this.apiClient.callApi(
        '/api/v1/environment/feature_flags/{feature_flag_key}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
